<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 				column="prod_no" 				jdbcType="NUMERIC" />
		<result property="prodName" 			column="prod_name" 				jdbcType="VARCHAR" />
		<result property="prodDetail" 			column="prod_detail" 			jdbcType="VARCHAR" />
		<result property="manuDate"				column="manufacture_day" 		jdbcType="VARCHAR" />
		<result property="price" 				column="price" 					jdbcType="NUMERIC" />
		<result property="fileName" 			column="image_file" 			jdbcType="VARCHAR"/>
		<result property="regDate" 				column="reg_date" 				jdbcType="DATE" />
		<result property="proTranCode"			column="tran_status_code"		jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO PRODUCT
		VALUES (seq_product_prod_no.nextval,
		#{prodName:VARCHAR},
		#{prodDetail:VARCHAR},
		#{manuDate:VARCHAR},
		#{price:NUMERIC},
		#{fileName:VARCHAR},
		SYSDATE )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="String"	resultMap="productSelectMap">
		SELECT * FROM PRODUCT WHERE prod_no = #{prodNo}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE PRODUCT
	   	<set>
	   		PROD_NAME 		= #{prodName} ,
			PROD_DETAIL		= #{prodDetail},
			MANUFACTURE_DAY = #{manuDate} ,
			PRICE			= #{price},
			IMAGE_FILE		= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
		SELECT *
	  		FROM( SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM(
	  							SELECT distinct p.*, tran_status_code
	  							FROM product p, transaction t 
											<where>
													<if test="1==1">
														p.prod_no = t.prod_no(+)
													</if>
										
													<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 			 	 AND p.PROD_NAME LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				 AND p.PRICE LIKE '%${searchKeyword}%'
													</if>
													</if>
											</where>
				
							ORDER BY p.prod_no) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT *
	  					FROM transaction t,product p 
	  						
											
												<where>
													<if test="1==1">
														p.prod_no = t.prod_no(+)
													</if>
													<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				AND p.PROD_NO LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				AND p.PROD_NAME LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				AND p.PRICE LIKE '%${searchKeyword}%'
													</if>
													</if>
												</where>
										) countTable						
	 </select>
	 
	 <select  id="getProductList2"  parameterType="search"	resultMap="productSelectMap">
		
	  							SELECT distinct p.*, tran_status_code
	  							FROM product p, transaction t 
											<where>
													<if test="1==1">
														p.prod_no = t.prod_no(+)
													</if>
										
													<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 			 	 AND p.PROD_NAME LIKE '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				 AND p.PRICE LIKE '%${searchKeyword}%'
													</if>
													</if>
											</where>
				
							ORDER BY p.prod_no
	 </select>
</mapper>