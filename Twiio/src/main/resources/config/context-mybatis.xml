<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:mongo="http://www.springframework.org/schema/data/mongo"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				 http://www.springframework.org/schema/beans/spring-beans.xsd
				 http://www.springframework.org/schema/data/mongo 
				 http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
				 http://www.springframework.org/schema/context 
				 http://www.springframework.org/schema/context/spring-context.xsd">
				
	<!-- ㅇ SqlSession 인스턴스를 생성하는 SqlSessionFactory 생성
	      ㅇ Factory Pattern  적용 :: Spring 의 FactoryBean interface 구현 -->
	<bean 	id="sqlSessionFactoryBean" 
					class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:sql/mybatis-config.xml"/>
	</bean>
	
	<!--  ㅇ SqlSessionTeampate 인스턴스생성
		   ㅇ Spring 과 연동시 사용하는 핵심 SqlSession 구현체
		   ㅇ Spring 에서 제공한는 Transaction 처리에 구조화된 SqlSession 구현체	 -->
	<bean		id="sqlSessionTemplate"		
					class="org.mybatis.spring.SqlSessionTemplate" >
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>

 
	<mongo:mongo-client id="mongo" host="localhost" port="27017">
        <mongo:client-options
            connections-per-host="8"
            threads-allowed-to-block-for-connection-multiplier="4"
            connect-timeout="1000"
            max-wait-time="1500"    
            socket-keep-alive="true"
            socket-timeout="1500"        
        />
    </mongo:mongo-client>
   
    <bean id="mongoTemplate"
            class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo" />  
        <constructor-arg name="databaseName" value="test" />   
    </bean> 
    
    

</beans>



