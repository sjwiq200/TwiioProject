<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="CommonMapper">

	<resultMap id="reportSelectMap" type="report">
		<result property="reportNo" 			column="report_no" 				jdbcType="NUMERIC"/>
		<result property="userNo"				column="user_no" 				jdbcType="NUMERIC"/>
		<result property="reportContent" 		column="report_content" 		jdbcType="VARCHAR"/>
		<result property="reportTitle" 			column="report_title" 			jdbcType="VARCHAR"/>
		<result property="reportRegDate" 		column="report_reg_date" 		jdbcType="DATE" />
		<result property="targetUserNo" 		column="target_user_no" 		jdbcType="NUMERIC"/>
		<result property="targetRoomNo" 		column="target_room_no" 		jdbcType="NUMERIC"/>
		<result property="targetReplyNo" 		column="target_reply_no" 		jdbcType="NUMERIC"/>
		<result property="targetCommunityNo" 	column="target_community_no" 	jdbcType="NUMERIC"/>
	</resultMap>
	
	<resultMap id="friendSelectMap" type="friend">
		<result property="no" 					column="no" 			jdbcType="NUMERIC"/>
		<result property="userNo"				column="user_no" 		jdbcType="NUMERIC" />
		<result property="friendNo" 			column="friend_no" 		jdbcType="NUMERIC" />
	</resultMap>
	
	<resultMap id="replySelectMap" type="reply">
		<result property="replyNo" 			column="reply_no" 			jdbcType="NUMERIC"/>
		<result property="userNo"			column="user_no" 			jdbcType="NUMERIC" />
		<result property="replyContent" 	column="reply_content" 		jdbcType="VARCHAR" />
		<result property="replyRegDate" 	column="reply_reg_date" 	jdbcType="DATE" />
		<result property="productNo" 		column="product_no" 		jdbcType="NUMERIC" />
		<result property="communityNo" 		column="community_no" 		jdbcType="NUMERIC" />
	</resultMap>
	
	
<!-- 	<resultMap id="totalsearchSelectMap" type="totalsearch">
		<result property="keyword" 			column="keyword" 			jdbcType="NUMERIC"/>
		<result property="room"				column="room" 				jdbcType="NUMERIC" />
		<result property="weather" 			column="weather" 			jdbcType="VARCHAR" />
		<result property="product" 			column="product" 			jdbcType="DATE" />
		<result property="nightLife" 		column="night_life" 		jdbcType="NUMERIC" />
		<result property="unsafeRegion" 	column="unsafe_region" 		jdbcType="NUMERIC" />
		<result property="currency" 		column="currency" 			jdbcType="NUMERIC" />
	</resultMap> -->
	
	<!--SQL : INSERT  -->
	<insert id="addReport" parameterType="report">
		INTO REPORT
		VALUES (
		seq_report_report_no.nextval,
		#{userNo:NUMERIC},
		#{reportContent:VARCHAR},
		#{reportTitle:VARCHAR},
		SYSDATE,
		#{targetUserNo:NUMERIC},
		#{targetRoomNo:NUMERIC},
		#{targetReplyNo:NUMERIC},
		#{targetCommunityN:NUMERIC}
		)
	</insert>
	
	<insert id="addFriend" parameterType="friend">
		INSERT
		INTO FRIEND
		VALUES (
		#{userNo:NUMERIC},
		#{friendNo:NUMERIC},
		seq_friend_no.nextval
		)
	</insert>
	
	<insert id="addReply" parameterType="reply">
		INSERT
		INTO REPLY
		VALUES (
		seq_reply_reply_no.nextval,
		#{user_no:NUMERIC},
		#{reply_content:VARCHAR},
		SYSDATE,
		#{productNo:NUMERIC},
		#{communityNo:NUMERIC}
		)	
	</insert>
	
	<!-- SQL : SELECT LIST -->
	
	<select id="listReport" parameterType="search" resultMap="reportSelectMap">
	SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM (
							   SELECT
							   REPORT_NO=#{reportNO},
							   USER_NO=#{userNo},
							   REPORT_CONTENT=#{reportContent},
							   REPORT_TITLE=#{reportTitle},
							   REPORT_REG_DATE=#{reportRegDate},
							   TARGET_USER_NO=#{targetUserNo},
							   TAGET_ROOM_NO=#{targetRoomNo},
							   TARGET_COMMUNITY_NO=#{targetCommunityNo},
							   TARGET_REPLY_NO=#{targetReplyNo}
							   FROM 
  							   REPORT 
							   ORDER BY REPORT_NO
							   ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	<select id="listFriend" parameterType="map" resultMap="friendSelectMap">
	SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM (
							   SELECT
							   		USER_NO=#{userNo},
							   		FRIEND_NO=#{friendNo},
							   		NO=#{No}
							   FROM 
  							   FRIEND 
  							   WHERE USER_NO=#{friend.userNo}
							   ORDER BY USER_NO
							   ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	<select id="listReply" parameterType="map" resultMap="replySelectMap">
	SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM (
							   SELECT
							   		REPLY_NO=#{replyNo},
							   		USER_NO=#{userNo},
							   		REPLY_CONTENT=#{replyContent},
							   		REPLY_REG_DATE=#{replyRegDate},
							   		PRODUCT_NO=#{productNo},
							   		COMMUNITY_NO=#{communityNo}
							   FROM 
  							   REPLY 
  							   <where>			
									<if test="divCode == 0">										
									    	productNo = #{reply.productNo}
									</if>
									<if test="divCode == 1">
									    	communityNo = #{reply.communityNo}
									</if>									
							  </where>
							   ORDER BY REPLY_NO
							   ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	<!-- SQL : SELECT ONE -->
	
	<select id="getReport" parameterType="int" resultType="report">
		SELECT * FROM PRODUCT WHERE REPORT_NO = #{reportNo}
	</select>
	
	<!-- SQL : UPDATE -->
	
	<update id="updateReply" parameterType="reply">
		UPDATE REPLY
	   	<set>
	   		REPLY_NO 		= #{replyNo} ,
			USER_NO			= #{userNo},
			REPLY_CONTENT 	= #{replyContent} ,
			REPLY_REG_DATE	= #{replyRegdate},
			PRODUCT_NO		= #{productNo},
			COMMUNITY_NO	= #{communityNo}
	   	</set>
	   	WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- SQL : DELETE ONE -->
	
	<delete id="deleteFriend" parameterType="int">
		DELETE FROM FRIEND WHERE NO=#{no}
	</delete>
	
	<delete id="deleteReply" parameterType="int">
		DELETE FROM REPLY WHERE REPLY_NO=#{replyNo}
	</delete> 
	
	<select  id="getTotalCountReport"  resultType="int">
	  	SELECT COUNT(*)
	  		FROM(SELECT *
	  			 FROM REPORT
				) countTable						
	 </select>
	 
	 <select  id="getTotalCountFriend"  parameterType="int" resultType="int">
	  	SELECT COUNT(*)
	  		FROM(SELECT *
	  			 FROM FRIEND
	  			 WHERE USER_NO=#{userNo}
				) countTable						
	 </select>
	 
	 <select  id="getTotalCountReply"  parameterType="reply" resultType="int">
	  	SELECT COUNT(*)
	  		FROM(SELECT *
	  				FROM REPLY 
  					<where>			
						<if test="reply.divCode == 0">										
						   	productNo = #{reply.productNo}
						</if>
						<if test="reply.communityNo == 1">
						   	communityNo = #{reply.communityNo}
						</if>									
					</where>
				) countTable						
	 </select>
</mapper>