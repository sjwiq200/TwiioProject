<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="productNo" 			column="product_no" 			jdbcType="NUMERIC"/>
		<result property="productName"			column="product_title" 			jdbcType="VARCHAR" />
		<result property="productPrice" 		column="product_price" 			jdbcType="NUMERIC" />
		<result property="productType" 			column="product_type" 			jdbcType="CHAR" />
		<result property="tripDate" 			column="trip_date" 				jdbcType="VARCHAR" />
		<result property="regDate" 				column="reg_date" 				jdbcType="DATE" />
		<result property="country" 				column="country" 				jdbcType="VARCHAR" />
		<result property="city" 				column="city" 					jdbcType="VARCHAR" />
		<result property="hostNo" 				column="user_no" 				jdbcType="NUMERIC" />
		<result property="description" 			column="product_content" 		jdbcType="CLOB" />
		<result property="tourHeadCount" 		column="head_count" 			jdbcType="NUMERIC" />
		<result property="viewCount" 			column="view_count" 			jdbcType="NUMERIC" />
		<result property="productCount" 		column="product_count" 			jdbcType="NUMERIC" />
		<result property="productDelete" 		column="product_delete" 		jdbcType="CHAR" />
		<result property="thumbnail" 			column="thumbnail" 				jdbcType="VARCHAR" />
		<result property="hostName" 			column="user_name" 				jdbcType="VARCHAR" />
		<result property="hostImage" 			column="profile_image" 			jdbcType="VARCHAR" />	
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product( product_no , product_title , product_price , product_type , trip_date, country, city, user_no, product_content, head_count, product_count, thumbnail, product_delete) 
		VALUES	 (	seq_PRODUCT_PRODUCT_NO.NEXTVAL ,
					#{productName} , 
					#{productPrice} , 
					#{productType} , 
					#{tripDate} , 					
					#{country} ,
					#{city} ,
					#{hostNo} ,
					#{description:VARCHAR} ,
					#{tourHeadCount} ,					
					#{productCount} ,
					#{thumbnail:VARCHAR} ,
					'0' )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="string"	resultMap="productSelectMap">
		 SELECT
			p.product_no as product_no, 
			p.product_title as product_title, 
			p.product_price as product_price, 
			p.product_type as product_type, 
			p.trip_date as trip_date,
			p.reg_date as reg_date, 
			p.country as country , 
			p.city as city , 
			p.user_no as user_no , 
			p.product_content as product_content, 
			p.head_count as head_count, 
			p.view_count as view_count, 
			p.product_count as product_count,
			p.thumbnail as thumbnail,
			u.user_name as user_name, 
			u.profile_image as profile_image		
		FROM product p, users u 
		WHERE p.user_no=u.user_no
		AND product_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		product_title 		= #{productName} ,
			product_price		= #{productPrice},
			product_type		= #{productType} ,
			trip_date			= #{tripDate} ,
			country				= #{country} ,
			city				= #{city} ,
			product_content		= #{description:VARCHAR} ,
			thumbnail			= #{thumbnail:VARCHAR} ,
			head_count			= #{tourHeadCount}						
	   	</set>
	   	WHERE product_no = #{productNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="listProduct"  parameterType="map"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	<include refid="listProductSql"/>
									 ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	 </select>
	 
	 <sql id="listProductSql">
		 SELECT
			p.product_no as product_no, 
			p.product_title as product_title, 
			p.product_price as product_price, 
			p.product_type as product_type, 
			p.trip_date as trip_date,
			p.reg_date as reg_date, 
			p.country as country , 
			p.city as city , 
			p.user_no as user_no , 
			p.product_content as product_content, 
			p.head_count as head_count, 
			p.view_count as view_count, 
			p.product_count as product_count,
			p.thumbnail as thumbnail, 
			u.user_name as user_name, 
			u.profile_image as profile_image		
		FROM product p, users u 
		WHERE p.user_no=u.user_no
		AND p.product_delete='0'		
		<if test="search.searchCondition != null">
			<if test="search.searchKeyword != null">
				<if test="(search.searchCondition eq '0'.toString()) and search.searchKeyword !='' ">
	 				AND country= #{search.searchKeyword}
				</if>
				<if test="(search.searchCondition eq '1'.toString()) and search.searchKeyword !='' ">
	 				AND city = #{search.searchKeyword}
				</if>
				<if test="(search.searchCondition eq '2'.toString()) and search.searchKeyword !='' ">
	 				AND product_title LIKE '%${search.searchKeyword}%'
				</if>
				<if test="(search.searchCondition eq '3'.toString()) and search.searchKeyword !='' ">
	 				AND user_name LIKE '${search.searchKeyword}%'
				</if>				
				<if test="(search.searchCondition eq '4'.toString())">
	 				AND p.user_no = '${search.userNo}'
				</if>
			</if>
		</if>
		<if test="search.prodSearchType != null and search.prodSearchType != '' ">
			AND product_type = #{search.prodSearchType}
		</if>		
		<choose>
			<when test="search.priceCondition == 'low'">ORDER BY product_price</when>
			<when test="search.priceCondition == 'high'">ORDER BY product_price DESC</when>
			<otherwise>ORDER BY reg_date DESC</otherwise>
		</choose>
	 </sql>
	 
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	<include refid="listProductSql"/>  ) countTable						
	 </select>
	 
	
	<!-- SQL : UPDATE -->
	 <update	id="deleteProduct"	parameterType="int" >
	   	UPDATE product
	   	<set>	   		
			product_delete			= '1'						
	   	</set>
	   	WHERE product_no = #{productNo}
	 </update>
	
	<!-- SQL : UPDATE -->
	 <update	id="updateViewCount"	parameterType="int" >
	   	UPDATE product
	   	<set>	   		
			view_count			= view_count+1						
	   	</set>
	   	WHERE product_no = #{productNo}
	 </update>
	 
	 
	 
</mapper>